
  <div class="container">
    <h1>User Manager</h1>
    <hr />
    <div class="page"></div>
  </div>


  <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/1.8.2/jquery.min.js" type="text/javascript"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.2/underscore-min.js" type="text/javascript"></script>
  <script src="http://cdnjs.cloudflare.com/ajax/libs/backbone.js/0.9.2/backbone-min.js"></script>

  <script type="text/template" id="user-list-template">
    <a href="#/new" class="btn btn-primary">New</a>
    <hr />
    <table class="table striped">
      <thead>
        <tr>
          <th>First Name</th><th>Last Name</th><th>Age</th><th></th>
        </tr>
      </thead>
      <tbody>
        <% _.each(users, function(user, index) { %>
          <tr>
            <td><%= htmlEncode(user.get('Muganda')) %></td>
            <td><%= htmlEncode(user.get('Yogi')) %></td>
            <!-- <td><%= htmlEncode(user.get('age')) %></td> -->
            <td><a class="btn" href="#/edit/<%= user.id %>">Edit</a></td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </script>

  <script type="text/template" id="edit-user-template">
    <form class="edit-user-form">
      <legend><%= user ? 'Edit' : 'New' %> User</legend>
        <label>First Name</label>
        <input name="firstname" type="text" value="<%= user ? user.get('Muganda') : '' %>">
        <label>Last Name</label>
        <input name="lastname" type="text" value="<%= user ? user.get('Yogi') : '' %>">
        <label>Age</label>
        <!--<input name="age" type="text" value="<%= user ? user.get('age') : '' %>"> -->
        <hr />
       <button type="submit" class="btn"><%= user ? 'Update' : 'Create' %></button>
       <% if(user) { %>
        <input type="hidden" name="id" value="<%= user.id %>" />
       <button data-user-id="<%= user.id %>" class="btn btn-danger delete">Delete</button>
       <% }; %>
    </form>
  </script>

  <script>
      function htmlEncode(value) {
          return $('<div/>').text(value).html();
      }
      $.fn.serializeObject = function () {
          var o = {};
          var a = this.serializeArray();
          $.each(a, function () {
              if (o[this.name] !== undefined) {
                  if (!o[this.name].push) {
                      o[this.name] = [o[this.name]];
                  }
                  o[this.name].push(this.value || '');
              } else {
                  o[this.name] = this.value || '';
              }
          });
          return o;
      };

      $.ajaxPrefilter(function (options, originalOptions, jqXHR) {
          options.url = 'http://localhost:54239/api' + options.url;
      });

      var Users = Backbone.Collection.extend({
          url: '/sayings'
      });

      var User = Backbone.Model.extend({
          urlRoot: '/sayings'
      });

      var UserListView = Backbone.View.extend({
          el: '.page',
          render: function () {
              var that = this;
              var users = new Users();
              users.fetch({
                  success: function (users) {
                      console.log("here");
                      console.log(JSON.stringify(users));
                      var template = _.template($('#user-list-template').html(), { users: users.models });
                      that.$el.html(template);
                  }
              })
          }
      });

      var userListView = new UserListView();

      var UserEditView = Backbone.View.extend({
          el: '.page',
          events: {
              'submit .edit-user-form': 'saveUser',
              'click .delete': 'deleteUser'
          },
          saveUser: function (ev) {
              console.log(ev.currentTarget);
              var userDetails = $(ev.currentTarget).serializeObject();
              var user = new User();
              user.save(userDetails, {
                  success: function (user) {
                      router.navigate('', { trigger: true });
                  }
              });
              return false;
          },
          deleteUser: function (ev) {
              this.user.destroy({
                  success: function () {
                      console.log('destroyed');
                      router.navigate('', { trigger: true });
                  }
              });
              return false;
          },
          render: function (options) {
              var that = this;
              console.log(options.id);
              if (options.id) {
                  that.user = new User({ id: options.id });
                  that.user.fetch({
                      success: function (user) {
                          var template = _.template($('#edit-user-template').html(), { user: user });
                          that.$el.html(template);
                      }
                  })
              } else {
                  var template = _.template($('#edit-user-template').html(), { user: null });
                  that.$el.html(template);
              }
          }
      });

      var userEditView = new UserEditView();

      var Router = Backbone.Router.extend({
          routes: {
              "": "home",
              "edit/:id": "edit",
              "new": "edit",
          }
      });

      var router = new Router;
      router.on('route:home', function () {
          // render user list
          userListView.render();
      })
      router.on('route:edit', function (id) {
          userEditView.render({ id: id });
      })
      Backbone.history.start();
  </script>


